"use strict";(self.webpackChunktiny=self.webpackChunktiny||[]).push([[378],{6187:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>r});const s=JSON.parse('{"id":"chans-invoices","title":"Chans Invoices","description":"- In this section we open channels with our fellow mutinynet lightning node operators and send each other off-chain mutinysats!","source":"@site/docs/chans-invoices.md","sourceDirName":".","slug":"/chans-invoices","permalink":"/nixos-mutinynet-tutorial/chans-invoices","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"title":"Chans Invoices","sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"Cln","permalink":"/nixos-mutinynet-tutorial/cln"},"next":{"title":"Bonus Rtl","permalink":"/nixos-mutinynet-tutorial/bonus-RTL"}}');var t=i(4848),o=i(8453);const l={title:"Chans Invoices",sidebar_position:5},c="Fun with opening channels and paying invoices",a={},r=[{value:"Grab some free sats from the faucet",id:"grab-some-free-sats-from-the-faucet",level:2},{value:"Get your node URI and announce it to your peers",id:"get-your-node-uri-and-announce-it-to-your-peers",level:2},{value:"Connect to some peers",id:"connect-to-some-peers",level:2},{value:"Open some channels",id:"open-some-channels",level:2},{value:"Creating and paying invoices",id:"creating-and-paying-invoices",level:2},{value:"Keep it rolling",id:"keep-it-rolling",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",input:"input",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"fun-with-opening-channels-and-paying-invoices",children:"Fun with opening channels and paying invoices"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"In this section we open channels with our fellow mutinynet lightning node operators and send each other off-chain mutinysats!"}),"\n"]}),"\n",(0,t.jsx)(n.h1,{id:"exercise-open-channels-and-pay-invoices",children:"Exercise: Open channels and pay invoices"}),"\n",(0,t.jsx)(n.h2,{id:"grab-some-free-sats-from-the-faucet",children:"Grab some free sats from the faucet"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"First, generate a new wallet address so you can deposit some sats on your node:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"lightning-cli newaddr\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Copy your deposit address and paste it into ",(0,t.jsx)(n.a,{href:"https://faucet.mutinynet.com",children:"https://faucet.mutinynet.com"})," to receive some free mutinynet sats!"]}),"\n",(0,t.jsx)(n.h2,{id:"get-your-node-uri-and-announce-it-to-your-peers",children:"Get your node URI and announce it to your peers"}),"\n",(0,t.jsx)(n.p,{children:"To get your node URI, first enter:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"lightning-cli getinfo\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Your node URI looks like ",(0,t.jsx)(n.code,{children:"<pubkey or node ID>@<IP or hostname>:<port>"})," (the port is usually optional, though you'll want to include it for this exercise)."]}),"\n",(0,t.jsx)(n.li,{children:"Share this URI with your peers!"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"connect-to-some-peers",children:"Connect to some peers"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Once you've announced your URI to everyone, anyone can connect to your node (and you to them) by entering:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"lightning-cli connect <URI>\n"})}),"\n",(0,t.jsxs)(n.p,{children:["(a.k.a. ",(0,t.jsx)(n.code,{children:"lightning-cli connect <pubkey>@<IP>:9735"}),")"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Connect to a handful of peers. You will be transacting with them shortly."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"open-some-channels",children:"Open some channels"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["See all the peers you have by running ",(0,t.jsx)(n.code,{children:"lightning-cli listpeers | jq -r '.peers[] | .id, .netaddr[0]'"})]}),"\n",(0,t.jsxs)(n.li,{children:["Once you have some peers, you can open channels to them with ",(0,t.jsx)(n.code,{children:"lightning-cli fundchannel <pubkey> <amount>"}),". The ",(0,t.jsx)(n.code,{children:"amount"})," field can be specified as a number of sats by appending ",(0,t.jsx)(n.code,{children:"sat"})," to the end of the sat amount you want to open the channel for. So, for example ",(0,t.jsx)(n.code,{children:"lightning-cli fundchannel 260a95d3d46afbca770cff6890 1000000sat"})," (to open a 1-million-sat channel)."]}),"\n",(0,t.jsx)(n.li,{children:"Once you have some channels, now the real fun begins!"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"creating-and-paying-invoices",children:"Creating and paying invoices"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Make an invoice for 1,000 sats and send it to anyone!"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"lightning-cli invoice 1000sat test test\n"})}),"\n",(0,t.jsxs)(n.p,{children:["then copy and paste the ",(0,t.jsx)(n.code,{children:"bolt11"})," field to the payer."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Pay invoices with:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"lightning-cli pay <their bolt11>\n"})}),"\n",(0,t.jsx)(n.h2,{id:"keep-it-rolling",children:"Keep it rolling"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Keep creating payments and sending them until you're satisfied."}),"\n",(0,t.jsxs)(n.li,{children:["Keep track of your on-chain and channel balances with ",(0,t.jsx)(n.code,{children:"lightning-cli bkpr-listbalances"})]}),"\n",(0,t.jsxs)(n.li,{children:["You can also use ",(0,t.jsx)(n.code,{children:"lightning-cli summary"})," to see a nice little ASCII depiction of your node"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"If there's still time left in the workshop, let's do some bonus stuff!"}),"\n",(0,t.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Grab some free sats from the mutinynet faucet"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Connect to some peers"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Open some channels"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Make some invoices"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Pay some invoices"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Look at your node's bookkeeper balance and summary"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>c});var s=i(6540);const t={},o=s.createContext(t);function l(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);